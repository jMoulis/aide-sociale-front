[
  {
    "type": "DATETIME",
    "tags": [{ "tag": "input", "types": ["datetime-local"], "default": true }],
    "instructions": "Used for selecting both date and time. Rendered as an input element with type 'datetime-local'."
  },
  {
    "type": "LIST",
    "tags": [],
    "instructions": "Used to display lists. Rendered as an unordered (ul) or ordered (ol) list with list items (li) representing each item. A LIST can only hold one direct child. Which could be any element"
  },
  {
    "type": "SELECT",
    "tags": [{ "tag": "select", "default": true }],
    "instructions": "Used for dropdown selection. Rendered as a select element containing option children."
  },
  {
    "type": "EMAIL",
    "tags": [{ "tag": "input", "default": true, "types": ["email"] }],
    "instructions": "Used for email input. Rendered as an input element with type 'email'.  MUST BE a FORM CHILD"
  },
  {
    "type": "COLOR",
    "tags": [{ "tag": "input", "default": true, "types": ["color"] }],
    "instructions": "Used for email input. Rendered as an input element with type 'color'.  MUST BE a FORM CHILD"
  },
  {
    "type": "TOGGLE",
    "tags": [],
    "instructions": "Used for binary toggling. Rendered as an input element with type 'checkbox' or a custom toggle component. Ensure any accompanying text is wrapped in a TEXT component."
  },
  {
    "type": "FILE",
    "tags": [{ "tag": "input", "default": true, "types": ["file"] }],
    "instructions": "Used for file selection. Rendered as an input element with type 'file'."
  },
  {
    "type": "FORM",
    "tags": [{ "tag": "form", "default": true }],
    "instructions": "Represents a form container. Used to group input elements and submit data. Rendered as a form element."
  },
  {
    "type": "NUMERIC",
    "tags": [{ "tag": "input", "types": ["number"], "default": true }],
    "instructions": "Used for numeric input. Rendered as an input element with type 'number'."
  },
  {
    "type": "RADIO",
    "tags": [{ "tag": "input", "types": ["radio"], "default": true }],
    "instructions": "Used for selecting one option among many. Rendered as an input element with type 'radio'."
  },
  {
    "type": "BLOCK",
    "tags": [
      { "tag": "div", "default": true },
      { "tag": "section" },
      { "tag": "article" },
      { "tag": "header" },
      { "tag": "footer" },
      { "tag": "main" },
      { "tag": "aside" },
      { "tag": "nav" },
      { "tag": "ul" },
      { "tag": "ol" },
      { "tag": "li" }
    ],
    "instructions": "Use for grouping content and layout sections. Represents container elements."
  },
  {
    "type": "BUTTON",
    "tags": [{ "tag": "button", "default": true }],
    "instructions": "Use when a form is created and a submission action is required. Always place the button at the bottom of the form. Do not insert text nodes directly; wrap text in a TEXT component (e.g., span)."
  },
  {
    "type": "DATE",
    "tags": [{ "tag": "input", "types": ["date"], "default": true }],
    "instructions": "Used for date selection. Rendered as an input element with type 'date'."
  },
  {
    "type": "TIME",
    "tags": [{ "tag": "input", "types": ["time"], "default": true }],
    "instructions": "Used for selecting a time. Rendered as an input element with type 'time'."
  },
  {
    "type": "RANGE",
    "tags": [{ "tag": "input", "types": ["range"], "default": true }],
    "instructions": "Used for selecting a value within a range. Rendered as an input element with type 'range'."
  },
  {
    "type": "TEXT",
    "tags": [
      { "tag": "p" },
      { "tag": "span", "default": true },
      { "tag": "strong" },
      { "tag": "em" },
      { "tag": "small" },
      { "tag": "mark" },
      { "tag": "del" },
      { "tag": "ins" },
      { "tag": "sub" },
      { "tag": "sup" },
      { "tag": "abbr" },
      { "tag": "q" },
      { "tag": "cite" },
      { "tag": "dfn" },
      { "tag": "code" },
      { "tag": "samp" },
      { "tag": "kbd" },
      { "tag": "var" },
      { "tag": "pre" },
      { "tag": "address" },
      { "tag": "blockquote" },
      { "tag": "div" },
      { "tag": "a" },
      { "tag": "b" },
      { "tag": "i" },
      { "tag": "s" },
      { "tag": "u" },
      { "tag": "tt" },
      { "tag": "h1" },
      { "tag": "h2" },
      { "tag": "h3" },
      { "tag": "h4" },
      { "tag": "h5" },
      { "tag": "h6" }
    ],
    "instructions": "Used for displaying text content. Wrap plain text nodes in this component. Can be rendered as various inline or block elements (e.g., p, span, strong). Avoid inserting text directly into interactive components."
  },
  {
    "type": "INPUT",
    "tags": [{ "tag": "input", "types": ["text"], "default": true }],
    "instructions": "Generic text input field. Rendered as an input element with type 'text'. MUST BE a FORM CHILD"
  },
  {
    "type": "DATERANGE",
    "tags": [],
    "instructions": "Custom component for selecting a range of dates. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to DATERANGE."
  },
  {
    "type": "RATING",
    "tags": [],
    "instructions": "Custom component for a rating interface. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to RATING."
  },
  {
    "type": "TEXTAREA",
    "tags": [{ "tag": "textarea", "default": true }],
    "instructions": "Used for multi-line text input. Rendered as a textarea element."
  },
  {
    "type": "LINK",
    "tags": [{ "tag": "a", "default": true }],
    "instructions": "Used for hyperlinks. Rendered as an anchor (<a>) element with an 'href' attribute. Wrap text in a TEXT component if needed."
  },
  {
    "type": "CHECKBOX",
    "tags": [{ "tag": "input", "types": ["checkbox"], "default": true }],
    "instructions": "Use for boolean input. Rendered as an input element with type 'checkbox'. Ensure labels or text are wrapped in a TEXT component."
  },
  {
    "type": "TABS",
    "tags": [],
    "instructions": "Custom component for tabbed interfaces. Does not have a direct HTML mapping; use subcomponents (TABSLIST, TABSTRIGGER, TABSCONTENT) within this container.",
    "exampleHtml": "<div data-type='TABS' value='tab1'><div data-type='TABSLIST'><span data-type='TABSTRIGGER' value='tab1'><span data-type='TEXT'>Tab1</span></span><span data-type='TABSTRIGGER' value='tab2'><span data-type='TEXT'>Tab2</span></span></div><div data-type='TABSCONTENT' value='tab1'><span data-type='TEXT'>Tab content 1</span></div><div data-type='TABSCONTENT' value='tab2'><span data-type='TEXT'>Tab content 2</span></div></div>"
  },
  {
    "type": "TABSCONTENT",
    "tags": [],
    "instructions": "Custom component for the content area of a tabbed interface. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to TABSCONTENT. The content can any valid HTML content."
  },
  {
    "type": "TABSLIST",
    "tags": [],
    "instructions": "Custom component for the tab list. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to TABSLIST."
  },
  {
    "type": "TABSTRIGGER",
    "tags": [],
    "instructions": "Custom component for tab triggers. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to TABSTRIGGER. It can be any element except a anchor tag and a button tag"
  },
  {
    "type": "IMAGE",
    "tags": [{ "tag": "img", "default": true }],
    "instructions": "Used to display images. Rendered as an img element. Ensure that an 'alt' attribute is provided for accessibility."
  },
  {
    "type": "DIALOG",
    "tags": [],
    "instructions": "Container for modal dialogs. This element should not take any class or style. SHOULD include a DIALOGTRIGGER and DIALOGCONTENT. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute.",
    "exampleHtml": "<div data-type='DIALOG'><div data-type='DIALOGTRIGGER'><span data-type='TEXT'>Open</span></div><div data-type='DIALOGCONTENT'><div data-type='BLOCK'><span data-type='TEXT'>Hello content</span></div></div></div>"
  },
  {
    "type": "DIALOGTRIGGER",
    "tags": [],
    "instructions": "Element that triggers the display of a dialog. It can be any element except a anchor tag and a button tag"
  },
  {
    "type": "DIALOGCONTENT",
    "tags": [],
    "instructions": "Container for the main content of a dialog. No direct HTML mapping; This element should not take any class or style."
  },
  {
    "type": "DIALOGTITLE",
    "tags": [],
    "instructions": "Used for the title of a dialog. Typically rendered as a heading and should be placed within DIALOGHEADER."
  },
  {
    "type": "DIALOGHEADER",
    "tags": [],
    "instructions": "Container for the header section of a dialog, usually containing the title and a close button. No direct HTML mapping."
  },
  {
    "type": "COLLAPSE",
    "tags": [],
    "instructions": "Container for collapsible sections. Used to group COLLAPSETRIGGER and COLLAPSECONTENT components. No direct HTML mapping; render a placeholder element with a data-type attribute."
  },
  {
    "type": "COLLAPSECONTENT",
    "tags": [],
    "instructions": "Container for the content that is shown or hidden in a collapsible section. Must be a child of a COLLAPSE component."
  },
  {
    "type": "COLLAPSETRIGGER",
    "tags": [],
    "instructions": "Element that triggers the collapse/expand action. It can be any element except a anchor tag and a button tag"
  },
  {
    "type": "SCHEDULER",
    "tags": [],
    "instructions": "Custom component for scheduling interfaces. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to SCHEDULER."
  },
  {
    "type": "SCHEDULER_FORM",
    "tags": [],
    "instructions": "Custom component for scheduling forms. Does not have a direct HTML mapping; render a placeholder element with a data-type attribute set to SCHEDULER_FORM. Must be a SCHEDULER child"
  }
]
